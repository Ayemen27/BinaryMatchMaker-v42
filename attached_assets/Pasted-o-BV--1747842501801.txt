o

BV

￼￼

سأقوم بإنشاء ملف تكوين البوت الذي سيسمح لبوت التلجرام بالتواصل مع التطبيق ومعالجة عمليات الدفع بنجوم التلجرام. سأستخدم طريقة الـ webhook المذكورة في المستند المرفق، حيث ستمكننا من تشغيل البوت والتطبيق على نفس الخادم.

أولاً، دعني أتحقق من وجود ملف .env وإذا كان يحتوي على توكن البوت:

Opened .env

شكراً لك، لاحظت أن مفتاح بوت التلجرام موجود بالفعل في ملف .env! هذا يعني أننا يمكننا استخدام هذا المفتاح لتنشيط البوت.

سأقوم الآن بإنشاء ملف جديد للبوت يستخدم طريقة webhook للتكامل مع خدمة التلجرام:

Created server/services/telegram-bot.ts

server/services/telegram-bot.ts

import express from 'express';

try {

// هذا مجرد مثال، يجب تعديله وفقًا لمنطق التطبيق

await this.sendMessage(chatId, 

'🔍 للتحقق من حالة اشتراكك، يرجى زيارة الموقع على:\n\n' +

'https://binarjoinanalytic.repl.co/dashboard'

);

} catch (error) {

console.error('[خدمة البوت] خطأ في التحقق من حالة الاشتراك:', error);

await this.sendMessage(chatId, '❌ حدث خطأ أثناء التحقق من حالة الاشتراك.');

}

}

/**

* إرسال رسالة إلى المستخدم

*/

private async sendMessage(chatId: number, text: string): Promise<void> {

try {

const apiUrl = `https://api.telegram.org/bot${this.botToken}/sendMessage`;

const response = await fetch(apiUrl, {

method: 'POST',

headers: {

'Content-Type': 'application/json',

},

body: JSON.stringify({

chat_id: chatId,

text,

parse_mode: 'HTML'

})

});

const data = await response.json();

if (!data.ok) {

console.error('[خدمة البوت] فشل في إرسال الرسالة:', data.description);

}

} catch (error) {

console.error('[خدمة البوت] خطأ أثناء إرسال الرسالة:', error);

}

}

/**

* التحقق من صحة نوع الخطة

*/

private isValidPlan(planType: string): boolean {

const validPlans = ['weekly', 'monthly', 'annual', 'premium'];

return validPlans.includes(planType.toLowerCase());

}

/**

* الحصول على اسم العرض للخطة

*/

private getPlanDisplayName(planType: string): string {

switch (planType.toLowerCase()) {

case 'weekly':

return 'الخطة الأسبوعية';

case 'monthly':

return 'الخطة الشهرية';

case 'annual':

return 'الخطة السنوية';

case 'premium':

return 'الخطة المتميزة';

default:

return planType;

}

}

}

الآن بعد أن قمت بإنشاء ملف خدمة بوت التلجرام، يجب علينا تسجيل وتفعيل هذه الخدمة في التطبيق الرئيسي. سأقوم بتعديل ملف السيرفر لتضمين هذه الخدمة الجديدة.

Opened server/index.ts

سأكمل إعداد البوت لتشغيل طريقة الدفع عبر نجوم التلجرام. سأقوم الآن بتعديل ملف routes.ts لتسجيل خدمة البوت:

Opened server/routes.ts

✓ فحص كود الدفع عبر نجوم التلجرام
✓ إنشاء ملف خدمة بوت التلجرام
→ تسجيل وتفعيل الخدمة في التطبيق الرئيسي

Checkpoint madejust now

•

Enable a Telegram bot to respond to user requests and integrate payments

Rollback here

Changes

ملاحظاتك صحيحة تمامًا. دعني أقوم بتعديل ملف routes.ts لإضافة تسجيل خدمة بوت التلجرام. سوف أستخدم grep للبحث عن الأجزاء المهمة أولاً:

Executed grep -n "registerRoutes" server/routes.ts

Scroll to latest

You must have an active subscription

